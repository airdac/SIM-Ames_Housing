hist(train_impute[,5],prob = TRUE, breaks = 20)
hist(train_num[,20],prob = TRUE, breaks = 20)
hist(train_impute[,20],prob = TRUE, breaks = 20)
hist(train_num[,20],prob = TRUE, breaks = 10)
hist(train_impute[,20],prob = TRUE, breaks = 10)
hist(train_num[,35],prob = TRUE, breaks = 20)
train_num
train_num[,4]
train_num
train_impute
str(train)
str(train_num)
train_num
names(train_num)
names(train_impute)
names(train_num[20])
names(train_num[35])
names(train_num)
train[,4]
names(train[,4])
names(train[4])
names(train[5])
names(train[20])
names(train[35])
names(train[57])
names(train[68])
names(train[77])
train_impute
hist(train_num$LotFrontage,prob = TRUE, breaks = 20)
hist(train_impute$LotFrontage,prob = TRUE, breaks = 20)
train_impute
# Use condes() method to determine the correlation between categorical feature and the target SalePrice.
res.con = condes(train, 80)
res.con$quanti
res.con$quali
res.con$category
prop.table(train$ScreenPorch)
train$ScreenPorch
barplot(train$ScreenPorch)
plot(train$ScreenPorch)
summary(train$ScreenPorch)
112/(1336+112)
shapiro.test(train_num$LotFrontage)
shapiro.test(train_num$GarageArea)
shapiro.test(train_num$GarageCars)
ks.test(train$SalePrice)
train$SalePrice
ks.test(train$SalePrice, y = 'pnorm')
train$SalePrice
ks.test(train$SalePrice, y = 'pnorm')
ks.test(train$YearBuilt, y = 'pnorm')
ks.test(train$YearBuilt, y = 'pnorm')
ks.test(train$YearBuilt, y = 'pnorm')
ks.test(train$YearBuilt, y = 'pnorm')
shapiro.test(train$YearBuilt)
ks.test(train$GrLivArea, y = 'pnorm')
shapiro.test(train$GrLivArea)
ks.test(train$LotArea, y = 'pnorm')
shapiro.test(train$LotArea)
# Use condes() method to determine the correlation between categorical feature and the target SalePrice.
res.con = condes(train, 80)
# Import the necessary library
library(car)
library(mice)
library(dplyr)
library(missMDA)
library(FactoMineR)
library(chemometrics)
library(DataExplorer)
library(corrplot)
library(con)
library(condes)
library(cond)
library(con)
library(condes)
# Use condes() method to determine the correlation between categorical feature and the target SalePrice.
res.con = condes(train, 80)
res.con$quanti
res.con$quali
res.con$category
# load DataExplorer library
#use create_report
library(DataExplorer)
#create_report(train)
#create_report(train_impute)
library(SmartEDA)
ExpReport(train, op_file = 'train_before_imputation_SMARTEDA.html')
ExpReport(test, op_file = 'test_before_imputation_SMARTEDA.html')
ExpReport(train_impute, op_file = 'train_before_imputation_SMARTEDA.html')
train_impute
summary(train$Neighborhood)
summary(train$Neighborhood)
summary(train$Neighborhood)
plot(train$Neighborhood)
mosaic(train$Neighborhood, gp = shading_Friendly,
split_vertical = TRUE,
main="Arthritis: gp = shading_Friendly")
library(ggplot2)
library(ggplot2)
pgplot(data = train) +
geom_mosaic(aes(x = product(rude_to_recline), fill=rude_to_recline)) +
labs(title='f(rude_to_recline)')
library(ggplot2)
ggplot(data = train) +
geom_mosaic(aes(x = product(rude_to_recline), fill=rude_to_recline)) +
labs(title='f(rude_to_recline)')
packages = c('vcd', 'vcdExtra', 'tidyverse')
mosaic(~ Sex + Age, data = titanic)
pie(train$Neighborhood)
train$Neighborhood
summary(train$Neighborhood)
levels(train$Neighborhood)
plot(train$Neighborhood)
count = c(17, 2, 16, 58, 28, 150, 51, 100, 79, 37, 17, 49, 225,
37, 9, 73, 73, 112, 74, 59, 86, 22, 25, 38, 11)
lbls = levels(train$Neighborhood)
pie(count,labels = lbls, col=rainbow(length(lbls)),
main="Pie Chart of Countries")
?mosaic
plot(train$Neighborhood)
count = c(17, 2, 16, 58, 28, 150, 51, 100, 79, 37, 17, 49, 225,
37, 9, 73, 73, 112, 74, 59, 86, 22, 25, 38, 11)
lbls = levels(train$Neighborhood)
pie(count,labels = lbls, col=rainbow(length(lbls)),
main="Summary of Neighborhood")
length(lbls
)
summary(train$Neighborhood)
a = table(train$Neighborhood)
a
length(train$Neighborhood)
a = table(train$Neighborhood) / length(train$Neighborhood)
a
a = table(100* train$Neighborhood) / length(train$Neighborhood)
a = 100* table(train$Neighborhood) / length(train$Neighborhood)
a
mosaicplot(train$Neighborhood)
corrplot(train, method="number")
library(corrplot)
corrplot(train, method="number")
library(corrplot)
corrplot(train_num, method="number")
train_num
library(corrplot)
corrplot(train_num[,1:5], method="number")
library(corrplot)
#corrplot(train_num[,1:5], method="number")
cor(train_num)
train_num$GarageYrBlt
library(corrplot)
#corrplot(train_num[,1:5], method="number")
cor(train_num, methods("spearman"))
library(corrplot)
#corrplot(train_num[,1:5], method="number")
cor(train_num, methods = "spearman")
library(corrplot)
#corrplot(train_num[,1:5], method="number")
cor(train_num, method = 'spearman')
library(corrplot)
#corrplot(train_num[,1:5], method="number")
cor(train_num, method = 'spearman')
cor(train_num$MasVnrArea, train_num$YearRemodAdd, method = 'spearman')
library(corrplot)
#corrplot(train_num[,1:5], method="number")
cor(train_num, method = 'spearman')
cor(train_num$MasVnrArea, train_num, method = 'spearman')
library(corrplot)
#corrplot(train_num[,1:5], method="number")
cor(train_num, method = 'spearman')
cor(train_num$MasVnrArea, train_num, method = 'spearman', use = "complete.obs")
library(corrplot)
#corrplot(train_num[,1:5], method="number")
cor(train_impute , method = 'spearman')
cor(train_num$MasVnrArea, train_num, method = 'spearman', use = "complete.obs")
library(corrplot)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method="number")
library(corrplot)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method="number")
library(corrplot)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
library(corrplot)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 2)
library(corrplot)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 5)
library(corrplot)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 8)
library(corrplot)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 5)
library(corrplot)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 10)
library(corrplot)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 5)
library(corrplot)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 4)
library(corrplot)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 5)
library(corrplot)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 4)
library(corrplot)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 4)
corrplot(corr_mat, order = 'AOE') %>%
corrRect(name = c('GrLivArea', 'GarageCars'))
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 4)
corrplot(corr_mat, order = 'AOE') %>%
corrRect(name = c('GrLivArea', 'GarageCars'))
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 4)
corrplot(corr_mat, order = 'AOE') %>%
corrRect(name = c('GrLivArea'))
# Tests for normality (done in all numerical variables)
ks.test(train$LotArea, y = 'pnorm')
shapiro.test(train$LotArea)
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 4)
corrplot(corr_mat, order = 'AOE') %>%
corrRect(name = c('GrLivArea', 'GarageCars'))
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 4)
corrplot(corr_mat, order = 'AOE') %>%
corrRect(name = c('GrLivArea', 'GarageCars', 'FullBath'))
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 4)
corrplot(corr_mat, order = 'AOE') %>%
corrRect(name = c('GrLivArea', 'GarageCars', 'YearRemodAdd'))
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 4)
corrplot(corr_mat, order = 'AOE') %>%
corrRect(name = c(
'GrLivArea', 'GarageCars', 'GarageArea', 'TotalBsmtSF', 'X1stFlrSF', 'YearBuilt', 'FullBath',
'YearRemodAdd', 'GarageYrBlt', 'TotRmsAbvGrd')))
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 4)
corrplot(corr_mat, order = 'AOE') %>%
corrRect(name = c(
'GrLivArea', 'GarageCars', 'GarageArea', 'TotalBsmtSF', 'X1stFlrSF', 'YearBuilt', 'FullBath', 'YearRemodAdd', 'GarageYrBlt', 'TotRmsAbvGrd'))
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 4)
corrplot(corr_mat, order = 'AOE') %>%
corrRect(name = c(
'GrLivArea', 'GarageCars', 'GarageArea'))
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 4)
corrplot(corr_mat, order = 'AOE') %>%
corrRect(name = c(
'GrLivArea', 'GarageCars', 'GarageArea', 'TotalBsmtSF', 'X1stFlrSF', 'YearBuilt', 'FullBath', 'YearRemodAdd', 'GarageYrBlt', 'TotRmsAbvGrd'))
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 4)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 5)
corrplot(corr_mat, order = 'AOE') %>%
corrRect(name = c(
'GrLivArea', 'GarageCars', 'GarageArea', 'TotalBsmtSF', 'X1stFlrSF', 'YearBuilt', 'FullBath', 'YearRemodAdd', 'GarageYrBlt', 'TotRmsAbvGrd'))
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 5)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 8)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 9)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 10)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 8)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 7)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 6)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 7)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 8)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 9)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 8)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 7)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 6)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 5)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_impute , method = 'spearman')
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 6)
names(train_impute)
str(train_impute)
str(train_impute)
train_impute
lenght(train_impute)
length(train_impute)
corr_mat
res.con = condes(train_impute)
# Import the necessary library
library(car)
library(mice)
library(dplyr)
library(missMDA)
library(FactoMineR)
library(chemometrics)
library(DataExplorer)
library(corrplot)
res.con = condes(train_impute)
res.con = condes(train_impute, 1)
res.con$quanti
res.con$quali
res.con$category
train_impute
train_impute[10]
train_impute[,10]
train_impute[,11]
train_impute[,13]
train_impute[,16]
train_impute[,20]
train_impute[,40]
train_impute[,31]
train_impute[,21]
train_impute[,22]
train_impute[,23]
train_impute[,24]
cor.test(train_impute)
cor.test(train_impute, train_impute)
cor.test(train_impute[,1], train_impute[,1])
cor.test(train_impute[,1], train_impute[,2])
corr_mat = cor(train , method = 'spearman')
corr_mat = cor(train, method = 'spearman')
train
train_num
corr_mat = cor(train_num, method = 'spearman')
corr_mat
corr_mat = cor(train_num, method = 'spearman', use = "complete.obs")
corr_mat
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_num, method = 'spearman', use = "complete.obs")
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 6)
res.con = condes(train, 80)
res.con$quanti
# Include the target variable with the other numerical
train_num_target = merge(train_num, train$SalePrice)
train_num_target
names(train_num_target)
names(train_num)
names(train_num[24])
train_num[,24]
train_num_target[,24]
train_num_target = merge(train_num, train$SalePrice, by="ID")
train$SalePrice
train_num_target = train_num
train_num_target[24]
train_num_target[23]
train_num_target[24] = train$SalePrice
train_num_target
train_num_target = train_num
train_num_target[24] = NA
train_num_target[24] = train$SalePrice
train$SalePrice
size(train_num_target)
length(train_num_target)
length(train_num_target[1])
length(train_num_target[,1])
length(train$SalePrice)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_num, method = 'spearman', use = "complete.obs")
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 6)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_num, method = 'spearman', use = "complete.obs")
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 8)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_num, method = 'spearman', use = "complete.obs")
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 10)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_num, method = 'spearman', use = "complete.obs")
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 6)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_num, method = 'spearman', use = "complete.obs")
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 4)
# Analysis of correlations. We use spearman because there is not normality
library(corrplot)
library(magrittr)
corr_mat = cor(train_num, method = 'spearman', use = "complete.obs")
#corrplot(corr_mat, method = 'color', order = 'alphabet')
corrplot(corr_mat, order = 'hclust', addrect = 5)
